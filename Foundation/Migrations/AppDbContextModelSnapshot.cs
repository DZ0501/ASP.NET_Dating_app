// <auto-generated />
using System;
using Foundation.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Foundation.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Foundation.Models.Alcohol_model", b =>
                {
                    b.Property<byte>("Alcohol_modelId")
                        .HasColumnType("tinyint")
                        .HasColumnName("alcohol_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("Alcohol_modelId");

                    b.ToTable("Alcohol");

                    b.HasData(
                        new
                        {
                            AlcoholmodelId = (byte)1,
                            Type = "Never"
                        },
                        new
                        {
                            AlcoholmodelId = (byte)2,
                            Type = "Occasionally"
                        },
                        new
                        {
                            AlcoholmodelId = (byte)3,
                            Type = "Often"
                        },
                        new
                        {
                            AlcoholmodelId = (byte)4,
                            Type = "Daily"
                        });
                });

            modelBuilder.Entity("Foundation.Models.Business_model", b =>
                {
                    b.Property<int>("Business_modelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Business_modelId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("address");

                    b.Property<string>("Localization")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("localization");

                    b.Property<decimal>("NIP")
                        .HasMaxLength(10)
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("nip");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("name");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("postcode");

                    b.HasKey("Business_modelId");

                    b.ToTable("Business");

                    b.HasData(
                        new
                        {
                            BusinessmodelId = 1,
                            Address = "ul. Na wzgórzu 42",
                            Localization = "Rabka Zdrój",
                            NIP = 9931742334m,
                            Name = "Blachotrapez Sp. z o.o",
                            Postcode = "30-215"
                        },
                        new
                        {
                            BusinessmodelId = 2,
                            Address = "ul. Krakowska 12",
                            Localization = "Nowy Sącz",
                            NIP = 7233422312m,
                            Name = "Oknoplast Sp. z o.o.",
                            Postcode = "32-712"
                        },
                        new
                        {
                            BusinessmodelId = 3,
                            Address = "ul. Krótka 32",
                            Localization = "Warszawa",
                            NIP = 9256345423m,
                            Name = "Evenea Sp. z o.o.",
                            Postcode = "02-250"
                        },
                        new
                        {
                            BusinessmodelId = 4,
                            Address = "ul. Informatyków 1",
                            Localization = "Kraków",
                            NIP = 6722341245m,
                            Name = "Comarch S.A.",
                            Postcode = "30-230"
                        },
                        new
                        {
                            BusinessmodelId = 5,
                            Address = "ul. Rakowicka 27",
                            Localization = "Kraków",
                            NIP = 9913451273m,
                            Name = "Uniwersytet Ekonomczny w Krakowie",
                            Postcode = "30-118"
                        },
                        new
                        {
                            BusinessmodelId = 6,
                            Address = "ul. Lipowa 3",
                            Localization = "Kraków",
                            NIP = 6792933459m,
                            Name = "Neostrain Sp. z o.o.",
                            Postcode = "30-702"
                        },
                        new
                        {
                            BusinessmodelId = 7,
                            Address = "ul. Poznańska 18",
                            Localization = "Warszawa",
                            NIP = 7452342345m,
                            Name = "Polkomtel S.A.",
                            Postcode = "00-212"
                        });
                });

            modelBuilder.Entity("Foundation.Models.Education_model", b =>
                {
                    b.Property<byte>("Education_modelId")
                        .HasColumnType("tinyint")
                        .HasColumnName("education_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("Education_modelId");

                    b.ToTable("Education");

                    b.HasData(
                        new
                        {
                            EducationmodelId = (byte)1,
                            Type = "Primary"
                        },
                        new
                        {
                            EducationmodelId = (byte)2,
                            Type = "Secondary"
                        },
                        new
                        {
                            EducationmodelId = (byte)3,
                            Type = "Higher"
                        });
                });

            modelBuilder.Entity("Foundation.Models.Interest_model", b =>
                {
                    b.Property<byte>("Interest_modelId")
                        .HasColumnType("tinyint")
                        .HasColumnName("interest_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("Interest_modelId");

                    b.ToTable("Interest");

                    b.HasData(
                        new
                        {
                            InterestmodelId = (byte)1,
                            Type = "Motorcycles"
                        },
                        new
                        {
                            InterestmodelId = (byte)2,
                            Type = "Cars"
                        },
                        new
                        {
                            InterestmodelId = (byte)3,
                            Type = "Music"
                        },
                        new
                        {
                            InterestmodelId = (byte)4,
                            Type = "Food"
                        },
                        new
                        {
                            InterestmodelId = (byte)5,
                            Type = "Computer games"
                        },
                        new
                        {
                            InterestmodelId = (byte)6,
                            Type = "Animals"
                        },
                        new
                        {
                            InterestmodelId = (byte)7,
                            Type = "Movies"
                        },
                        new
                        {
                            InterestmodelId = (byte)8,
                            Type = "TV series"
                        },
                        new
                        {
                            InterestmodelId = (byte)9,
                            Type = "Technology"
                        },
                        new
                        {
                            InterestmodelId = (byte)10,
                            Type = "Traveling"
                        },
                        new
                        {
                            InterestmodelId = (byte)11,
                            Type = "Cooking"
                        },
                        new
                        {
                            InterestmodelId = (byte)12,
                            Type = "Reading"
                        },
                        new
                        {
                            InterestmodelId = (byte)13,
                            Type = "Nature"
                        });
                });

            modelBuilder.Entity("Foundation.Models.Men_model", b =>
                {
                    b.Property<int>("Men_modelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("men_id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Men_modelId"));

                    b.Property<int>("Age")
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasColumnName("age")
                        .HasColumnOrder(3);

                    b.Property<byte>("AlcoholId")
                        .HasMaxLength(2)
                        .HasColumnType("tinyint")
                        .HasColumnName("alcohol_id");

                    b.Property<int?>("BusinessId")
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    b.Property<byte>("EducationId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("education_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("first_name")
                        .HasColumnOrder(1);

                    b.Property<byte?>("InterestFirstId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("interest_1_id")
                        .HasColumnOrder(5);

                    b.Property<byte?>("InterestSecondId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("interest_2_id")
                        .HasColumnOrder(6);

                    b.Property<byte?>("InterestThirdId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("interest_3_id")
                        .HasColumnOrder(7);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("last_name")
                        .HasColumnOrder(2);

                    b.Property<string>("Localization")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("localization")
                        .HasColumnOrder(4);

                    b.Property<string>("PetName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("pet_name");

                    b.Property<byte?>("PetTypeId")
                        .HasMaxLength(2)
                        .HasColumnType("tinyint")
                        .HasColumnName("pet_type_id");

                    b.Property<byte>("RelationshipStatusId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("relationship_status_id");

                    b.Property<byte>("ReligionId")
                        .HasMaxLength(2)
                        .HasColumnType("tinyint")
                        .HasColumnName("religion_id");

                    b.Property<byte>("SmokingId")
                        .HasMaxLength(2)
                        .HasColumnType("tinyint")
                        .HasColumnName("smoking_id");

                    b.Property<byte>("ZodiacSignId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("zodiac_sign_id");

                    b.HasKey("Men_modelId");

                    b.HasIndex("AlcoholId");

                    b.HasIndex("BusinessId");

                    b.HasIndex("EducationId");

                    b.HasIndex("InterestFirstId");

                    b.HasIndex("InterestSecondId");

                    b.HasIndex("InterestThirdId");

                    b.HasIndex("PetTypeId");

                    b.HasIndex("RelationshipStatusId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("SmokingId");

                    b.HasIndex("ZodiacSignId");

                    b.ToTable("Men");

                    b.HasData(
                        new
                        {
                            MenmodelId = 1,
                            Age = 20,
                            AlcoholId = (byte)1,
                            BusinessId = 2,
                            EducationId = (byte)2,
                            FirstName = "Paweł",
                            InterestFirstId = (byte)4,
                            InterestSecondId = (byte)2,
                            InterestThirdId = (byte)3,
                            LastName = "Urbański",
                            Localization = "Kraków",
                            PetName = "Dyzio",
                            PetTypeId = (byte)2,
                            RelationshipStatusId = (byte)1,
                            ReligionId = (byte)1,
                            SmokingId = (byte)1,
                            ZodiacSignId = (byte)3
                        },
                        new
                        {
                            MenmodelId = 2,
                            Age = 25,
                            AlcoholId = (byte)3,
                            BusinessId = 4,
                            EducationId = (byte)3,
                            FirstName = "Damian",
                            InterestFirstId = (byte)2,
                            InterestSecondId = (byte)1,
                            InterestThirdId = (byte)3,
                            LastName = "Jawor",
                            Localization = "Wadowice",
                            PetName = "Piorun",
                            PetTypeId = (byte)1,
                            RelationshipStatusId = (byte)1,
                            ReligionId = (byte)1,
                            SmokingId = (byte)4,
                            ZodiacSignId = (byte)1
                        },
                        new
                        {
                            MenmodelId = 3,
                            Age = 21,
                            AlcoholId = (byte)1,
                            BusinessId = 2,
                            EducationId = (byte)2,
                            FirstName = "Borys",
                            InterestFirstId = (byte)3,
                            InterestSecondId = (byte)1,
                            InterestThirdId = (byte)2,
                            LastName = "Pawlak",
                            Localization = "Toruń",
                            RelationshipStatusId = (byte)1,
                            ReligionId = (byte)1,
                            SmokingId = (byte)2,
                            ZodiacSignId = (byte)2
                        },
                        new
                        {
                            MenmodelId = 4,
                            Age = 18,
                            AlcoholId = (byte)3,
                            EducationId = (byte)1,
                            FirstName = "Kajetan",
                            InterestFirstId = (byte)2,
                            InterestSecondId = (byte)3,
                            InterestThirdId = (byte)1,
                            LastName = "Kowalski",
                            Localization = "Nowy Sącz",
                            PetName = "Saba",
                            PetTypeId = (byte)1,
                            RelationshipStatusId = (byte)3,
                            ReligionId = (byte)1,
                            SmokingId = (byte)2,
                            ZodiacSignId = (byte)1
                        },
                        new
                        {
                            MenmodelId = 5,
                            Age = 30,
                            AlcoholId = (byte)1,
                            BusinessId = 5,
                            EducationId = (byte)3,
                            FirstName = "Marcel",
                            InterestFirstId = (byte)9,
                            InterestSecondId = (byte)10,
                            InterestThirdId = (byte)5,
                            LastName = "Bąk",
                            Localization = "Warszawa",
                            PetName = "Ares",
                            PetTypeId = (byte)2,
                            RelationshipStatusId = (byte)2,
                            ReligionId = (byte)3,
                            SmokingId = (byte)2,
                            ZodiacSignId = (byte)7
                        });
                });

            modelBuilder.Entity("Foundation.Models.Pet_model", b =>
                {
                    b.Property<byte>("Pet_modelId")
                        .HasColumnType("tinyint")
                        .HasColumnName("pet_type_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("Pet_modelId");

                    b.ToTable("Pet");

                    b.HasData(
                        new
                        {
                            PetmodelId = (byte)1,
                            Type = "Dog"
                        },
                        new
                        {
                            PetmodelId = (byte)2,
                            Type = "Cat"
                        },
                        new
                        {
                            PetmodelId = (byte)3,
                            Type = "Guinea pig"
                        });
                });

            modelBuilder.Entity("Foundation.Models.Relationship_status_model", b =>
                {
                    b.Property<byte>("Relationship_status_modelId")
                        .HasColumnType("tinyint")
                        .HasColumnName("relationship_status_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("Relationship_status_modelId");

                    b.ToTable("Relationship_status");

                    b.HasData(
                        new
                        {
                            RelationshipstatusmodelId = (byte)1,
                            Type = "Free"
                        },
                        new
                        {
                            RelationshipstatusmodelId = (byte)2,
                            Type = "Taken"
                        },
                        new
                        {
                            RelationshipstatusmodelId = (byte)3,
                            Type = "Other"
                        });
                });

            modelBuilder.Entity("Foundation.Models.Religion_model", b =>
                {
                    b.Property<byte>("Religion_modelId")
                        .HasColumnType("tinyint")
                        .HasColumnName("religion_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("Religion_modelId");

                    b.ToTable("Religion");

                    b.HasData(
                        new
                        {
                            ReligionmodelId = (byte)1,
                            Type = "Christianity"
                        },
                        new
                        {
                            ReligionmodelId = (byte)2,
                            Type = "Islam"
                        },
                        new
                        {
                            ReligionmodelId = (byte)3,
                            Type = "Hinduism"
                        },
                        new
                        {
                            ReligionmodelId = (byte)4,
                            Type = "Buddhism"
                        });
                });

            modelBuilder.Entity("Foundation.Models.Smoking_model", b =>
                {
                    b.Property<byte>("Smoking_modelId")
                        .HasColumnType("tinyint")
                        .HasColumnName("smoking_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("Smoking_modelId");

                    b.ToTable("Smoking");

                    b.HasData(
                        new
                        {
                            SmokingmodelId = (byte)1,
                            Type = "Never"
                        },
                        new
                        {
                            SmokingmodelId = (byte)2,
                            Type = "Occasionally"
                        },
                        new
                        {
                            SmokingmodelId = (byte)3,
                            Type = "Often"
                        },
                        new
                        {
                            SmokingmodelId = (byte)4,
                            Type = "Daily"
                        });
                });

            modelBuilder.Entity("Foundation.Models.Women_model", b =>
                {
                    b.Property<int>("Women_modelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("men_id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Women_modelId"));

                    b.Property<int>("Age")
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasColumnName("age")
                        .HasColumnOrder(3);

                    b.Property<byte>("AlcoholId")
                        .HasMaxLength(2)
                        .HasColumnType("tinyint")
                        .HasColumnName("alcohol_id");

                    b.Property<int?>("BusinessId")
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    b.Property<byte>("EducationId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("education_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("first_name")
                        .HasColumnOrder(1);

                    b.Property<byte?>("InterestFirstId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("interest_1_id")
                        .HasColumnOrder(5);

                    b.Property<byte?>("InterestSecondId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("interest_2_id")
                        .HasColumnOrder(6);

                    b.Property<byte?>("InterestThirdId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("interest_3_id")
                        .HasColumnOrder(7);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("last_name")
                        .HasColumnOrder(2);

                    b.Property<string>("Localization")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("localization")
                        .HasColumnOrder(4);

                    b.Property<string>("PetName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("pet_name");

                    b.Property<byte?>("PetTypeId")
                        .HasMaxLength(2)
                        .HasColumnType("tinyint")
                        .HasColumnName("pet_type_id");

                    b.Property<byte>("RelationshipStatusId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("relationship_status_id");

                    b.Property<byte>("ReligionId")
                        .HasMaxLength(2)
                        .HasColumnType("tinyint")
                        .HasColumnName("religion_id");

                    b.Property<byte>("SmokingId")
                        .HasMaxLength(2)
                        .HasColumnType("tinyint")
                        .HasColumnName("smoking_id");

                    b.Property<byte>("ZodiacSignId")
                        .HasMaxLength(3)
                        .HasColumnType("tinyint")
                        .HasColumnName("zodiac_sign_id");

                    b.HasKey("Women_modelId");

                    b.HasIndex("AlcoholId");

                    b.HasIndex("BusinessId");

                    b.HasIndex("EducationId");

                    b.HasIndex("InterestFirstId");

                    b.HasIndex("InterestSecondId");

                    b.HasIndex("InterestThirdId");

                    b.HasIndex("PetTypeId");

                    b.HasIndex("RelationshipStatusId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("SmokingId");

                    b.HasIndex("ZodiacSignId");

                    b.ToTable("Women");

                    b.HasData(
                        new
                        {
                            WomenmodelId = 1,
                            Age = 20,
                            AlcoholId = (byte)1,
                            BusinessId = 2,
                            EducationId = (byte)2,
                            FirstName = "Jagoda",
                            InterestFirstId = (byte)11,
                            InterestSecondId = (byte)12,
                            InterestThirdId = (byte)13,
                            LastName = "Lis",
                            Localization = "Wadowice",
                            PetName = "Eliza",
                            PetTypeId = (byte)3,
                            RelationshipStatusId = (byte)1,
                            ReligionId = (byte)1,
                            SmokingId = (byte)2,
                            ZodiacSignId = (byte)3
                        },
                        new
                        {
                            WomenmodelId = 2,
                            Age = 27,
                            AlcoholId = (byte)3,
                            BusinessId = 4,
                            EducationId = (byte)3,
                            FirstName = "Lara",
                            InterestFirstId = (byte)2,
                            InterestSecondId = (byte)1,
                            InterestThirdId = (byte)3,
                            LastName = "Czerwik",
                            Localization = "Kraków",
                            PetName = "Beza",
                            PetTypeId = (byte)2,
                            RelationshipStatusId = (byte)1,
                            ReligionId = (byte)1,
                            SmokingId = (byte)4,
                            ZodiacSignId = (byte)1
                        },
                        new
                        {
                            WomenmodelId = 3,
                            Age = 23,
                            AlcoholId = (byte)1,
                            BusinessId = 2,
                            EducationId = (byte)2,
                            FirstName = "Wiktoria",
                            InterestFirstId = (byte)3,
                            InterestSecondId = (byte)1,
                            InterestThirdId = (byte)2,
                            LastName = "Zakrzewska",
                            Localization = "Warszawa",
                            RelationshipStatusId = (byte)1,
                            ReligionId = (byte)1,
                            SmokingId = (byte)3,
                            ZodiacSignId = (byte)2
                        },
                        new
                        {
                            WomenmodelId = 4,
                            Age = 20,
                            AlcoholId = (byte)3,
                            EducationId = (byte)1,
                            FirstName = "Helena",
                            InterestFirstId = (byte)2,
                            InterestSecondId = (byte)3,
                            InterestThirdId = (byte)1,
                            LastName = "Pikol",
                            Localization = "Nowy Sącz",
                            PetName = "Agrest",
                            PetTypeId = (byte)1,
                            RelationshipStatusId = (byte)3,
                            ReligionId = (byte)2,
                            SmokingId = (byte)2,
                            ZodiacSignId = (byte)1
                        },
                        new
                        {
                            WomenmodelId = 5,
                            Age = 32,
                            AlcoholId = (byte)3,
                            BusinessId = 1,
                            EducationId = (byte)1,
                            FirstName = "Natalia",
                            InterestFirstId = (byte)2,
                            InterestSecondId = (byte)3,
                            InterestThirdId = (byte)1,
                            LastName = "Sobczak",
                            Localization = "Sandomierz",
                            PetName = "Fafik",
                            PetTypeId = (byte)1,
                            RelationshipStatusId = (byte)3,
                            ReligionId = (byte)2,
                            SmokingId = (byte)2,
                            ZodiacSignId = (byte)1
                        });
                });

            modelBuilder.Entity("Foundation.Models.Zodiac_sign_model", b =>
                {
                    b.Property<byte>("Zodiac_sign_modelId")
                        .HasColumnType("tinyint")
                        .HasColumnName("zodiac_sign_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("Zodiac_sign_modelId");

                    b.ToTable("Zodiac_sign");

                    b.HasData(
                        new
                        {
                            ZodiacsignmodelId = (byte)1,
                            Type = "Aquarius"
                        },
                        new
                        {
                            ZodiacsignmodelId = (byte)2,
                            Type = "Pisces"
                        },
                        new
                        {
                            ZodiacsignmodelId = (byte)3,
                            Type = "Aries"
                        },
                        new
                        {
                            ZodiacsignmodelId = (byte)4,
                            Type = "Taurus"
                        },
                        new
                        {
                            ZodiacsignmodelId = (byte)5,
                            Type = "Gemini"
                        },
                        new
                        {
                            ZodiacsignmodelId = (byte)6,
                            Type = "Cancer"
                        },
                        new
                        {
                            ZodiacsignmodelId = (byte)7,
                            Type = "Leo"
                        },
                        new
                        {
                            ZodiacsignmodelId = (byte)8,
                            Type = "Virgo"
                        },
                        new
                        {
                            ZodiacsignmodelId = (byte)9,
                            Type = "Libra"
                        },
                        new
                        {
                            ZodiacsignmodelId = (byte)10,
                            Type = "Scorpio"
                        },
                        new
                        {
                            ZodiacsignmodelId = (byte)11,
                            Type = "Capricorn"
                        });
                });

            modelBuilder.Entity("Foundation.Models.Men_model", b =>
                {
                    b.HasOne("Foundation.Models.Alcohol_model", "Alcohol_model")
                        .WithMany("Men_model")
                        .HasForeignKey("AlcoholId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foundation.Models.Business_model", "Business_model")
                        .WithMany("Men_model")
                        .HasForeignKey("BusinessId");

                    b.HasOne("Foundation.Models.Education_model", "Education_model")
                        .WithMany("Men_model")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foundation.Models.Interest_model", "Interest_first_model")
                        .WithMany("Men_first_models")
                        .HasForeignKey("InterestFirstId");

                    b.HasOne("Foundation.Models.Interest_model", "Interest_second_model")
                        .WithMany("Men_second_models")
                        .HasForeignKey("InterestSecondId");

                    b.HasOne("Foundation.Models.Interest_model", "Interest_third_model")
                        .WithMany("Men_third_models")
                        .HasForeignKey("InterestThirdId");

                    b.HasOne("Foundation.Models.Pet_model", "Pet_model")
                        .WithMany("Men_model")
                        .HasForeignKey("PetTypeId");

                    b.HasOne("Foundation.Models.Relationship_status_model", "Relationship_status_model")
                        .WithMany("Men_model")
                        .HasForeignKey("RelationshipStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foundation.Models.Religion_model", "Religion_model")
                        .WithMany("Men_model")
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foundation.Models.Smoking_model", "Smoking_model")
                        .WithMany("Men_model")
                        .HasForeignKey("SmokingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foundation.Models.Zodiac_sign_model", "Zodiac_sign_model")
                        .WithMany("Men_model")
                        .HasForeignKey("ZodiacSignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alcohol_model");

                    b.Navigation("Business_model");

                    b.Navigation("Education_model");

                    b.Navigation("Interest_first_model");

                    b.Navigation("Interest_second_model");

                    b.Navigation("Interest_third_model");

                    b.Navigation("Pet_model");

                    b.Navigation("Relationship_status_model");

                    b.Navigation("Religion_model");

                    b.Navigation("Smoking_model");

                    b.Navigation("Zodiac_sign_model");
                });

            modelBuilder.Entity("Foundation.Models.Women_model", b =>
                {
                    b.HasOne("Foundation.Models.Alcohol_model", "Alcohol_model")
                        .WithMany("Women_model")
                        .HasForeignKey("AlcoholId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foundation.Models.Business_model", "Business_model")
                        .WithMany("Women_model")
                        .HasForeignKey("BusinessId");

                    b.HasOne("Foundation.Models.Education_model", "Education_model")
                        .WithMany("Women_model")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foundation.Models.Interest_model", "Interest_first_model")
                        .WithMany("Women_first_models")
                        .HasForeignKey("InterestFirstId");

                    b.HasOne("Foundation.Models.Interest_model", "Interest_second_model")
                        .WithMany("Women_second_models")
                        .HasForeignKey("InterestSecondId");

                    b.HasOne("Foundation.Models.Interest_model", "Interest_third_model")
                        .WithMany("Women_third_models")
                        .HasForeignKey("InterestThirdId");

                    b.HasOne("Foundation.Models.Pet_model", "Pet_model")
                        .WithMany("Women_model")
                        .HasForeignKey("PetTypeId");

                    b.HasOne("Foundation.Models.Relationship_status_model", "Relationship_status_model")
                        .WithMany("Women_model")
                        .HasForeignKey("RelationshipStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foundation.Models.Religion_model", "Religion_model")
                        .WithMany("Women_model")
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foundation.Models.Smoking_model", "Smoking_model")
                        .WithMany("Women_model")
                        .HasForeignKey("SmokingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foundation.Models.Zodiac_sign_model", "Zodiac_sign_model")
                        .WithMany("Women_model")
                        .HasForeignKey("ZodiacSignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alcohol_model");

                    b.Navigation("Business_model");

                    b.Navigation("Education_model");

                    b.Navigation("Interest_first_model");

                    b.Navigation("Interest_second_model");

                    b.Navigation("Interest_third_model");

                    b.Navigation("Pet_model");

                    b.Navigation("Relationship_status_model");

                    b.Navigation("Religion_model");

                    b.Navigation("Smoking_model");

                    b.Navigation("Zodiac_sign_model");
                });

            modelBuilder.Entity("Foundation.Models.Alcohol_model", b =>
                {
                    b.Navigation("Men_model");

                    b.Navigation("Women_model");
                });

            modelBuilder.Entity("Foundation.Models.Business_model", b =>
                {
                    b.Navigation("Men_model");

                    b.Navigation("Women_model");
                });

            modelBuilder.Entity("Foundation.Models.Education_model", b =>
                {
                    b.Navigation("Men_model");

                    b.Navigation("Women_model");
                });

            modelBuilder.Entity("Foundation.Models.Interest_model", b =>
                {
                    b.Navigation("Men_first_models");

                    b.Navigation("Men_second_models");

                    b.Navigation("Men_third_models");

                    b.Navigation("Women_first_models");

                    b.Navigation("Women_second_models");

                    b.Navigation("Women_third_models");
                });

            modelBuilder.Entity("Foundation.Models.Pet_model", b =>
                {
                    b.Navigation("Men_model");

                    b.Navigation("Women_model");
                });

            modelBuilder.Entity("Foundation.Models.Relationship_status_model", b =>
                {
                    b.Navigation("Men_model");

                    b.Navigation("Women_model");
                });

            modelBuilder.Entity("Foundation.Models.Religion_model", b =>
                {
                    b.Navigation("Men_model");

                    b.Navigation("Women_model");
                });

            modelBuilder.Entity("Foundation.Models.Smoking_model", b =>
                {
                    b.Navigation("Men_model");

                    b.Navigation("Women_model");
                });

            modelBuilder.Entity("Foundation.Models.Zodiac_sign_model", b =>
                {
                    b.Navigation("Men_model");

                    b.Navigation("Women_model");
                });
#pragma warning restore 612, 618
        }
    }
}
